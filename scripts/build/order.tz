{ parameter
    (or (or (list %create
               (pair (pair (pair (pair (string %assetId) (string %assetProviderId))
                                 (pair (string %createdAt) (int %depositAmount)))
                           (pair (pair (int %holidayProvision) (string %id))
                                 (pair (int %installmentAmount) (string %merchantId))))
                     (pair (pair (pair (string %paymentFreq) (string %paymentMethod))
                                 (pair (string %status) (int %totalOutStandingAmount)))
                           (pair (pair (int %unitCost) (int %units)) (string %updatedAt)))))
            (string %remove))
        (list %update
           (pair (pair (pair (pair (string %assetId) (string %assetProviderId))
                             (pair (string %createdAt) (int %depositAmount)))
                       (pair (pair (int %holidayProvision) (string %id))
                             (pair (int %installmentAmount) (string %merchantId))))
                 (pair (pair (pair (string %paymentFreq) (string %paymentMethod))
                             (pair (string %status) (int %totalOutStandingAmount)))
                       (pair (pair (int %unitCost) (int %units)) (string %updatedAt)))))) ;
  storage
    (big_map
       string
       (pair (pair (pair (pair (string %assetId) (string %assetProviderId))
                         (pair (string %createdAt) (int %depositAmount)))
                   (pair (pair (int %holidayProvision) (string %id))
                         (pair (int %installmentAmount) (string %merchantId))))
             (pair (pair (pair (string %paymentFreq) (string %paymentMethod))
                         (pair (string %status) (int %totalOutStandingAmount)))
                   (pair (pair (int %unitCost) (int %units)) (string %updatedAt))))) ;
  code { LAMBDA
           address
           bool
           { PUSH address "tz1MwDG66PtctWRXLTNJ89BLWjPtwCm9gXVU" ; SWAP ; COMPARE ; EQ } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SENDER ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 NOT ;
                 IF { PUSH string "Only an admin can create a new asset" ; FAILWITH } {} ;
                 ITER { DROP } }
               { SENDER ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 NOT ;
                 IF { PUSH string "Only admin can update order" ; FAILWITH } {} ;
                 NONE (pair (pair (pair (pair string string) (pair string int))
                                  (pair (pair int string) (pair int string)))
                            (pair (pair (pair string string) (pair string int)) (pair (pair int int) string))) ;
                 SWAP ;
                 UPDATE } }
           { SENDER ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             NOT ;
             IF { PUSH string "Only admin can update order details" ; FAILWITH } {} ;
             ITER { DROP } } ;
         NIL operation ;
         PAIR } }

